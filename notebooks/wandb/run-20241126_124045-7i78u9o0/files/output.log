Training:   0%|          | 0/4 [00:02<?, ?it/s]
Epochs:   0%|          | 0/10 [00:02<?, ?it/s]]
batch.shape torch.Size([32, 1, 80, 3000])
mel_input.shape torch.Size([32, 1, 80, 3000])
torch.Size([32, 1, 80, 3000]) torch.Size([32, 1, 10])
torch.Size([80, 3000])
torch.Size([80, 1653])
mel_input.shape torch.Size([80, 3000])
mel_input.shape torch.Size([80, 514])
mel_input.shape torch.Size([80, 924])
mel_input.shape[1] 924
mel_input.shape torch.Size([80, 2325])
mel_input.shape[1] 2325
mel_input.shape torch.Size([80, 2325])
mel_input.shape[1] 2325
mel_input.shape torch.Size([80, 2325])
mel_input.shape[1] 2325 3000
mel_input.shape torch.Size([80, 2325])
mel_input.shape[1] 2325 3000
mel_input.shape torch.Size([80, 662])
mel_input.shape[1] 662 3000
mel_input.shape torch.Size([80, 1000])
mel_input.shape[1] 1000 3000
mel_input.shape torch.Size([80, 3000])
mel_input.shape torch.Size([80, 3000])
mel_input.shape torch.Size([80, 3000])
mel_input.shape torch.Size([80, 2186])
mel_input.shape[1] 2186 3000
mel_input.shape torch.Size([80, 2960])
mel_input.shape[1] 2960 3000
mel_input.shape torch.Size([80, 1641])
mel_input.shape[1] 1641 3000
mel_input.shape torch.Size([80, 3000])
mel_input.shape torch.Size([80, 765])
mel_input.shape[1] 765 3000
mel_input.shape torch.Size([80, 2644])
mel_input.shape[1] 2644 3000
mel_input.shape torch.Size([80, 2711])
mel_input.shape[1] 2711 3000
mel_input.shape torch.Size([80, 3000])
mel_input.shape torch.Size([80, 1334])
mel_input.shape[1] 1334 3000
mel_input.shape torch.Size([80, 702])
mel_input.shape[1] 702 3000
mel_input.shape torch.Size([80, 862])
mel_input.shape[1] 862 3000
mel_input.shape torch.Size([80, 903])
mel_input.shape[1] 903 3000
mel_input.shape torch.Size([80, 1737])
mel_input.shape[1] 1737 3000
mel_input.shape torch.Size([80, 538])
mel_input.shape[1] 538 3000
mel_input.shape torch.Size([80, 509])
mel_input.shape[1] 509 3000
mel_input.shape torch.Size([80, 3000])
mel_input.shape torch.Size([80, 1133])
mel_input.shape[1] 1133 3000
mel_input.shape torch.Size([80, 2936])
mel_input.shape[1] 2936 3000
mel_input.shape torch.Size([80, 3000])
mel_input.shape torch.Size([80, 1421])
mel_input.shape[1] 1421 3000
mel_input.shape torch.Size([80, 1329])
mel_input.shape[1] 1329 3000
mel_input.shape torch.Size([80, 2149])
mel_input.shape[1] 2149 3000
mel_input.shape torch.Size([80, 1687])
mel_input.shape[1] 1687 3000
mel_input.shape torch.Size([80, 1946])
mel_input.shape[1] 1946 3000
mel_input.shape torch.Size([80, 3000])
mel_input.shape torch.Size([80, 1690])
mel_input.shape[1] 1690 3000
Batch type: <class 'list'>
{'litgre1': 0, 'eucdov': 1, 'commoo3': 2, 'eurcoo': 3, 'lirplo': 4, 'comsan': 5, 'grnsan': 6, 'comgre': 7, 'graher1': 8, 'rorpar': 9}
/Users/x25bd/Code/mlx/week-7/mlx-whisper/.venv/lib/python3.9/site-packages/whisper/__init__.py:150: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(fp, map_location=device)
Test batch type: <class 'list'>
Test batch type: <class 'list'>
Test batch structure: [tensor([[[-0.9097, -0.6986, -0.0370,  ...,  0.0000,  0.0000,  0.0000],
         [-0.9462, -0.7813, -0.0567,  ...,  0.0000,  0.0000,  0.0000],
         [-0.9607, -0.9292, -0.0294,  ...,  0.0000,  0.0000,  0.0000],
         ...,
         [-1.0000, -1.0000, -0.8918,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -0.9618,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000]],

        [[-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         ...,
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000]],

        [[-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         ...,
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000]],

        ...,

        [[-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         ...,
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000]],

        [[-1.0000, -1.0000, -1.0000,  ...,  0.2220,  0.2157, -0.0110],
         [-1.0000, -1.0000, -1.0000,  ...,  0.1282,  0.0902, -0.1284],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0650, -0.1038, -0.0682],
         ...,
         [-1.0000, -1.0000, -1.0000,  ..., -0.4028, -0.4416, -0.4132],
         [-1.0000, -1.0000, -1.0000,  ..., -0.4952, -0.4772, -0.4403],
         [-1.0000, -1.0000, -1.0000,  ..., -0.5718, -0.5435, -0.4795]],

        [[-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         ...,
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000],
         [-1.0000, -1.0000, -1.0000,  ...,  0.0000,  0.0000,  0.0000]]]), tensor([[0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 1., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 1.]]), ('id: 6, species: grnsan, filename: grnsan/XC424250.ogg', 'id: 0, species: litgre1, filename: litgre1/XC810044.ogg', 'id: 3, species: eurcoo, filename: eurcoo/XC548450.ogg', 'id: 1, species: eucdov, filename: eucdov/XC612031.ogg', 'id: 3, species: eurcoo, filename: eurcoo/XC631343.ogg', 'id: 6, species: grnsan, filename: grnsan/XC622364.ogg', 'id: 4, species: lirplo, filename: lirplo/XC523189.ogg', 'id: 7, species: comgre, filename: comgre/XC822664.ogg', 'id: 8, species: graher1, filename: graher1/XC638183.ogg', 'id: 8, species: graher1, filename: graher1/XC795292.ogg', 'id: 2, species: commoo3, filename: commoo3/XC543820.ogg', 'id: 2, species: commoo3, filename: commoo3/XC468902.ogg', 'id: 7, species: comgre, filename: comgre/XC507425.ogg', 'id: 4, species: lirplo, filename: lirplo/XC712410.ogg', 'id: 1, species: eucdov, filename: eucdov/XC363124.ogg', 'id: 5, species: comsan, filename: comsan/XC586330.ogg', 'id: 3, species: eurcoo, filename: eurcoo/XC596853.ogg', 'id: 5, species: comsan, filename: comsan/XC667808.ogg', 'id: 5, species: comsan, filename: comsan/XC574127.ogg', 'id: 3, species: eurcoo, filename: eurcoo/XC628567.ogg', 'id: 1, species: eucdov, filename: eucdov/XC507347.ogg', 'id: 8, species: graher1, filename: graher1/XC824809.ogg', 'id: 8, species: graher1, filename: graher1/XC692942.ogg', 'id: 8, species: graher1, filename: graher1/XC673323.ogg', 'id: 4, species: lirplo, filename: lirplo/XC445287.ogg', 'id: 4, species: lirplo, filename: lirplo/XC809443.ogg', 'id: 7, species: comgre, filename: comgre/XC636834.ogg', 'id: 1, species: eucdov, filename: eucdov/XC304855.ogg', 'id: 6, species: grnsan, filename: grnsan/XC581104.ogg', 'id: 3, species: eurcoo, filename: eurcoo/XC385139.ogg', 'id: 5, species: comsan, filename: comsan/XC667345.ogg', 'id: 9, species: rorpar, filename: rorpar/XC679949.ogg')]
